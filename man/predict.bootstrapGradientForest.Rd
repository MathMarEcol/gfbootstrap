% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gfbootstrap.R
\name{predict.bootstrapGradientForest}
\alias{predict.bootstrapGradientForest}
\title{Predict bootstrapGradientForest}
\usage{
\method{predict}{bootstrapGradientForest}(
  object,
  newdata,
  type = c("mean"),
  extrap = "compress",
  extrap_pow = 1/4,
  ...
)
}
\description{
Generic S3 function for predicting bootstrapGradientForest
objects.
}
\details{
The behaviour is very similar to predict.gradientForest,
but due to the way bootstrapGradientForest is intended
to be used, an extra parameter, \code{type} is added.

\code{type} is a vector containing elements from
c("mean", "variance", "points", "weight")

"mean" gives the unweighted mean of the points (default, for
consistency with other predict functions)

"variance" gives the unweighted variance of the points

"points" returns all the points, so for each new x row,
k (number of bootstrapped models) rows will be returned

"weight" gives the R^2 performance of each bootstrapped model.

Due to the fact that many rows of output can be returned
for each row of input, x_row is included in the returned
data.frame to match inputs to outputs.

extrap can take on 4 values, c("clip", "linear", "compress", "na")

"linear" extrapolate each model linearly using average gradient

"clip" returns the maximum or minimum Y if X exceeds training values

"compress" extrapolates, but applies compression so predicted
values approach an asymptote as X moves veary far from training values.
extrap_pow is only used with "compress", and sets the
compression power. 1/4 gives the 4th root, 1 is equivalent to "linear"
and 0 is equivalent to "clip"

TODO: just use "compress" with edge cases for linear and clip
TODO: This code is rather spaghetti, eg. activity 4 depends on 2 and 3,
then activity 5 depends on 1 and 4

"na" return Na outside of the training values. "na" only uses
models that observed the training data when calculating mean and variance
... arguments passed to cumimp
If \code{type} contains more than one string, a list of
data.frames will be returned, otherwise just a data.frame.
}
