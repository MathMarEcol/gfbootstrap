% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gfbootstrap.R
\name{predict.bootstrapGradientForest}
\alias{predict.bootstrapGradientForest}
\title{Predict bootstrapGradientForest}
\usage{
\method{predict}{bootstrapGradientForest}(
  object,
  newdata,
  type = c("mean"),
  extrap = TRUE,
  extrap_pow = 1/4,
  ...
)
}
\arguments{
\item{object}{a bootstrapGradientForest object}

\item{newdata}{data.frame of new observations to predict. If NULL, use observations from object.}

\item{type}{is a vector containing elements from
c("mean", "variance", "points", "weight")

"mean" gives the unweighted mean of the points (default, for
consistency with other predict functions)

"variance" gives the unweighted variance of the points

"points" returns all the points, so for each new x row,
k (number of bootstrapped models) rows will be returned

"weight" gives the R^2 performance of each bootstrapped model.

Due to the fact that many rows of output can be returned
for each row of input, x_row is included in the returned
data.frame to match inputs to outputs.}

\item{extrap}{can be TRUE or FALSE

If extrap = FALSE, return NA outside of the training values. extrap = FALSE only uses
models that observed the training data when calculating mean and variance

If extrap = TRUE, then the curves are extrapolated if the new value lies outside
the training values.}

\item{extrap_pow}{is only used with extrap = TRUE, and sets the
compression power. 1/4 gives the 4th root. 1 produces linear extrapolation
and 0 clips the extrapolation to the min and max values of Y.}

\item{...}{arguments passed to gradientForest::cumimp()
TODO: This code is rather spaghetti, eg. activity 4 depends on 2 and 3,
then activity 5 depends on 1 and 4}
}
\value{
A long form data.frame, with $type giving the prediction type.
}
\description{
Generic S3 function for predicting bootstrapGradientForest
objects.
}
\details{
The behaviour is very similar to predict.gradientForest,
but due to the way bootstrapGradientForest is intended
to be used, an extra parameter, \code{type} is added.
}
